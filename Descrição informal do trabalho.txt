                                    Descrição informal do trabalho
                            
                                        17 de Setembro de 2017
                
1 Introdução
    
    O presente documento tem objetiva descrever e detalhar o funcionamento do software
desenvolvido, através da explicação do que é realizado nas classes, controladores e telas.
    Sendo que tal explicação auxiliará na posterior documentação do software.
Os tópicos Classes, Controladores e Telas podem ser editados por qualquer membro da
equipe, enquanto que os tópicos Algumas ideias pessoais e Observações possuem subtó-
picos reservados para cada membro da equipe que podem ser editados apenas pelos seus
respectivos membros(ou donos).

2 Classes

3 Controladores

4 Telas

Existirão, no mínimo, as seguintes telas:

• Cargo: que permitirá adicionar, alterar e remover cargos, sendo essas ações possíveis única 
e exclusivamente para gerentes ou o administrador do sistema.
  Ao entrar nesta tela, o usuário será redirecionado para outra tela onde poderá escolher entre 
as seguintes opções:

1. Adicionar Cargo
2. Alterar(ou editar) Cargo
3. Excluir Cargo
4. Sair

    As telas Adicionar Cargo e Alterar Cargo redirecionarão o usuário para outra tela parecida com essa:

1. Código
2. Nome
3. Nível Hierárquico(é gerente, tem acesso restrito ao setor financeiro ou o acesso é
bloqueado)
    
    Lembrando que se o cargo possuí acesso restrito ao setor financeiro a seguinte
opção deve ser introduzida:

4. Cadastro de Horários(que pode, ou não, redirecionar o usuário para outra tela
onde serão cadastrados os horários em que o funcionário de tal cargo tem acesso
ao setor financeiro)
5. Sair

    Já na tela Excluir Cargo será apenas perguntado ao usuário se ele tem certeza se deseja realizar
a operação e informar ao mesmo se tal cargo possuí funcionários que serão excluídos da memória junto
com o cargo.

• Funcionário: que permitirá adicionar, alterar e remover funcionários, sendo essas
ações possíveis única e exclusivamente para gerentes ou o administrador do sistema.
  Ao entrar nesta tela, o usuário será redirecionado para outra tela onde poderá escolher 
entre as seguintes opções:

1. Adicionar Funcionário
2. Alterar(ou editar) Funcionário
3. Excluir Funcionário
4. Sair

As telas Adicionar Funcionário e Alterar Funcionário redirecionarão o usuário para
outra tela parecida com essa:

1. Número de matrícula
2. Nome
3. Data de Nascimento
4. Telefone
5. Salário
6. Cargo
7. Sair

Já na tela Excluir Funcionário será apenas perguntado ao usuário se ele tem certeza se
deseja realizar a operação.

• Setor Financeiro: que permitirá, ou não, a entrada de funcionários mediante a apre-
sentação do número de matrícula do mesmo e a inserção do horário de entrada.
Ao entrar nesta tela, o usuário será redirecionado à outra tela onde sua matrícula será 
requerida e, logo após, o horário de entrada. Se o funcionário estiver autorizado à entrar 
no setor financeiro será imprimida a seguinte mensagem: 
"O funcionário "+ funcionario.getNome() +" entrou no Setor Financeiro", 
caso contrário será imprimido um erro e o mesmo será armazenado. Após dois erros vindos do 
mesmo funcionário será imprimida uma mensagem de alerta na tela, informando ao usuário que 
ele possuí apenas mais uma tentativa para entrar no setor financeiro e, se tal tentativa 
falhar, o mesmo terá seu acesso ao setor financeiro permanentemente bloqueado.

5 Algumas ideias pessoais

5.1 Lucas

5.2 Marcos

5.3 Sadi

• Criar um administrador do sistema que ficará responsável pela cadastro do primeiro
funcionário(que será, obviamente um gerente).
• Seria interessante se esse administrador fosse o único cuja matrícula exigisse uma senha para 
ter acesso total ao sistema.
• É dito no pdf que o cargo deve dizer se permite, ou não, acesso ao setor financeiro ou se o cargo 
é gerencial. 
Por isso não seria mais eficiente criar um atributo HierarquiaCargo na classe Cargo que pode ser:

1. Gerencial
2. Acesso restrito
3. Acesso Bloqueado ou não permitido
Além de ArraysList dos cargos que pertencem a qual nível hierárquico.

• Criar uma classe que armazena apenas as matrículas dos funcionários e os códigos dos
cargos e é utilizada no cadastro ou edição dos funcionários e cargos para verificar se
tal matrícula ou código já existe.

6 Observações

6.1 Lucas

6.2 Marcos

6.3 Sadi

• Segundo o pdf disponibilizado pelo professor, a entrada no setor financeiro é feita 
com o funcionário digitando sua matrícula, logo em seguida o sistema verifica se a 
matrícula é válida e depois verifica qual o cargo do funcionário e, na minha opinião, 
isso tornaria desnecessário o atributo ehGerente na classe Cargo.
    Por isso sugiro implementar a ideia descrita no seção acima, onde a verificação se 
o funcionário é gerente seria realizada através do método:
gerentes.contains(funcionario.getCargo()).
    A verificação se o funcionário possuí ou não acesso ao setor financeiro seria realizada 
da mesma forma. A única diferença é, se por acaso, o funcionário possuí acesso restrito ao 
setor financeiro, teria que pegar qual o horário de acesso permitido e se bate com o horário 
que o funcionário tentou acessar o setor financeiro.

OBS: A parte do pdf que fala disso:

Para permitir a entrada dos funcionários, o sistema deve verificar primeiramente se a
matrícula do funcionário é válida (se existe algum funcionário cadastrado com aquele
número de matrícula) e, em caso positivo, verificar qual o cargo do funcionário.
